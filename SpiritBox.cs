using UnityEngine;
using System.Collections;

public class SpiritBox : MonoBehaviour
{
    public AudioClip helloSound;      // ????? "Hello"
    public AudioClip ghostSound1;     // ????????????? 1
    public AudioClip ghostSound2;     // ????????????? 2
    public Transform itemHolder;      // ????????????? Spirit Box (??????????)

    private AudioSource audioSource;  // ????????????
    private bool isUsingSpiritBox = false; // ?????????? Spirit Box ?????????????????????
    private Room currentRoom;         // ??????????????????
    private bool isInSpiritRoom = false; // ??????????????????????????????????? Spirit Box ???
    private bool isGhostAnswering = false; // ?????????????????????????????????????????

    private void Start()
    {
        audioSource = gameObject.AddComponent<AudioSource>(); // ????? AudioSource ?????????
        if (audioSource == null)
        {
            Debug.LogError("No AudioSource found on Spirit Box!");
        }
    }

    private void Update()
    {
        // ??????????????????????????????? Spirit Box ???
        if (isInSpiritRoom && !isUsingSpiritBox && !isGhostAnswering)
        {
            StartCoroutine(UseSpiritBox());  // ??????????????????????????? Hello ?????????
        }
    }

    // ????????????????????????????
    private IEnumerator UseSpiritBox()
    {
        if (currentRoom == null) yield break;

        // ????????????????????????????
        if (isUsingSpiritBox || isGhostAnswering) yield break;

        isUsingSpiritBox = true; // ??????? isUsingSpiritBox ???????????????????????

        Debug.Log("Spirit Box: Using Spirit Box");

        // ????????? "Hello" ????
        audioSource.PlayOneShot(helloSound);
        Debug.Log("Spirit Box: Playing 'Hello'");

        // ????????????? "Hello" ????????
        yield return new WaitForSeconds(helloSound.length);

        // ??????????????????
        bool isGhostAnswer = Random.Range(0f, 1f) < 0.5f; // ?????????? 50%

        if (currentRoom != null && currentRoom.canUseSpiritBox)
        {
            if (isGhostAnswer)
            {
                // ???????? ????????????????
                AudioClip ghostResponse = (Random.Range(0f, 1f) < 0.5f) ? ghostSound1 : ghostSound2;

                // ??????? isGhostAnswering ?????????????????????????
                isGhostAnswering = true;

                // ??????????????????
                audioSource.PlayOneShot(ghostResponse);
                Debug.Log("Spirit Box: Ghost responded");

                // ???????????????????????
                yield return new WaitForSeconds(ghostResponse.length);
            }
            else
            {
                Debug.Log("Spirit Box: No response from the ghost");
            }
        }
        else
        {
            // ??????????????????? Spirit Box, ????????????????????????
            Debug.Log("Spirit Box: No ghost response, not in an active ghost room.");
        }

        // ????????? "Hello" ???
        audioSource.PlayOneShot(helloSound);
        Debug.Log("Spirit Box: Playing 'Hello' again");

        // ???????????? Spirit Box ?????????????
        isUsingSpiritBox = false;
        isGhostAnswering = false; // ?????????????????????????
    }

    // ???????????????????????????????????????????????? Spirit Box ???
    private void OnTriggerEnter(Collider other)
    {
        Room room = other.GetComponent<Room>();
        if (room != null && room.canUseSpiritBox)
        {
            isInSpiritRoom = true;  // ????????????????????????? Spirit Box ???
            currentRoom = room;     // ??????????????????
            Debug.Log("Entered a Spirit Box usable room: " + room.roomName);
        }
    }

    private void OnTriggerExit(Collider other)
    {
        Room room = other.GetComponent<Room>();
        if (room != null && room.canUseSpiritBox)
        {
            isInSpiritRoom = false;  // ?????????????????????? Spirit Box ???
            currentRoom = null;      // ??????????
            Debug.Log("Exited a Spirit Box usable room: " + room.roomName);
        }
    }

    // ???????????????????????????? SpiritBox (?????????????????)
    public void ResetSpiritBox()
    {
        isUsingSpiritBox = false;
        isGhostAnswering = false;
        currentRoom = null; // ????????????????????????? Spirit Box
        Debug.Log("Spirit Box reset.");
    }
}
